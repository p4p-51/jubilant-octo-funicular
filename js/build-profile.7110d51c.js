"use strict";(self["webpackChunkfrontend"]=self["webpackChunkfrontend"]||[]).push([[685],{8003:function(e,n,i){i.d(n,{Z:function(){return u}});var t=i(3396),s=i(4870),a=i(7139),l=i(7182),o=i(3752),c=i.n(o),r=i(678),d=(0,t.aZ)({__name:"GoButton",props:{text:{type:String,default:"All done!! ->"}},setup(e){const n=(0,s.qj)({loading:!1}),i=(0,r.tv)(),o=(0,r.yj)(),d=async()=>{n.loading=!0;const e=await l.x3.nextLocation(o.fullPath);await i.push(e),n.loading=!1};return(i,l)=>((0,t.wg)(),(0,t.iD)(t.HY,null,[(0,t.Wm)((0,s.SU)(c()),{active:n.loading,"onUpdate:active":l[0]||(l[0]=e=>n.loading=e)},null,8,["active"]),(0,t._)("button",{class:"go-button",onClick:d},(0,a.zw)(e.text),1)],64))}});const p=d;var u=p},4486:function(e,n,i){i.r(n),i.d(n,{default:function(){return N}});var t=i(3396);const s=e=>((0,t.dD)("data-v-48a9595f"),e=e(),(0,t.Cn)(),e),a={class:"lecture-view"},l=(0,t.Uk)(" Now you’ve learnt how to introduce yourself, lets go into adding and categorizing previous experiences. Experiences can range from your previous team at work or university group projects. "),o=s((()=>(0,t._)("br",null,null,-1))),c=s((()=>(0,t._)("br",null,null,-1))),r=(0,t.Uk)(" We'll use the experiences later down the line to prompt you when answering different interview questions. Be sure to add labels to your questions, as this will help you organise them later. "),d=(0,t.Uk)("Save and continue");function p(e,n,i,s,p,u){const x=(0,t.up)("TitleBlock"),g=(0,t.up)("add-experiences"),h=(0,t.up)("go-button");return(0,t.wg)(),(0,t.iD)("div",a,[(0,t.Wm)(x,{module:"Organising past experiences",title:"Building your interview\r\n    profile",subtitle:"Tell me about a time when..."},{default:(0,t.w5)((()=>[l,o,c,r])),_:1}),(0,t.Wm)(g),(0,t.Wm)(h,{class:"go-button"},{default:(0,t.w5)((()=>[d])),_:1})])}var u=i(8815),x=(i(6699),i(7139)),g=i(9242),h=i(2539);const w=e=>((0,t.dD)("data-v-e78ed0e0"),e=e(),(0,t.Cn)(),e),v={class:"add-experiences"},m=w((()=>(0,t._)("h2",null,"List down some of your past teamwork experiences",-1))),f={class:"content"},b={class:"create-experiences"},k=["onClick"],E={class:"actions"},_=["onClick"],y=w((()=>(0,t._)("img",{src:h},null,-1))),C=[y],L={class:"checklist"},D=w((()=>(0,t._)("h3",null,"Your experiences",-1))),I={key:0,class:"tick"},M={key:1,class:"dot"};function U(e,n,i,s,a,l){const o=(0,t.up)("loading"),c=(0,t.up)("experience-modal");return(0,t.wg)(),(0,t.iD)(t.HY,null,[(0,t.Wm)(o,{active:e.isLoading,"onUpdate:active":n[0]||(n[0]=n=>e.isLoading=n)},null,8,["active"]),(0,t._)("div",v,[m,(0,t._)("div",f,[(0,t._)("div",b,[(0,t._)("button",{class:"box",onClick:n[1]||(n[1]=(...n)=>e.addNewExperience&&e.addNewExperience(...n))}," + Add a new experience "),((0,t.wg)(!0),(0,t.iD)(t.HY,null,(0,t.Ko)(e.experiences,(n=>((0,t.wg)(),(0,t.iD)("div",{key:n.name,class:"box experience",onClick:i=>e.selectExperience(i,n)},[(0,t._)("p",null,(0,x.zw)(n.name),1),(0,t._)("div",E,[(0,t._)("div",{onClick:(0,g.iM)((i=>e.deleteExperience(i,n)),["stop"]),class:"edit-icon"},C,8,_)])],8,k)))),128))]),(0,t._)("div",L,[D,((0,t.wg)(!0),(0,t.iD)(t.HY,null,(0,t.Ko)(e.labels,(e=>((0,t.wg)(),(0,t.iD)("p",{key:e},[this.experienceAttributes.includes(e.label)?((0,t.wg)(),(0,t.iD)("span",I," ✓ ")):((0,t.wg)(),(0,t.iD)("span",M,"• ")),(0,t.Uk)((0,x.zw)(e.label),1)])))),128))])])]),e.isModalOpen?((0,t.wg)(),(0,t.j4)(c,{key:0,experience:e.selectedExperience,labels:e.labels,onCancelExp:n[2]||(n[2]=n=>e.isModalOpen=!1),onSaveExperience:e.saveExperience},null,8,["experience","labels","onSaveExperience"])):(0,t.kq)("",!0)],64)}var Z=i(4462),B=i(6537),O=i(3752),A=i.n(O),W=(0,t.aZ)({name:"AddExperiences",components:{ExperienceModal:Z.Z,Loading:A()},async mounted(){this.isLoading=!0;const[e,n]=await(0,B.g7)(),[i,t]=await(0,B.E$)();(e||i)&&alert("Error"),this.labels=n,this.experiences=t,this.isLoading=!1},methods:{selectExperience(e,n){this.selectedExperience=n,this.isModalOpen=!0},addNewExperience(){this.selectedExperience=null,this.isModalOpen=!0},async saveExperience(e){if(this.isLoading=!0,e.experienceId){const n=this.experiences.find((n=>n.experienceId==e.experienceId));let i={};n.name!=e.name&&(n.name=e.name,i["name"]=e.name),n.labels=e.labels;const[t,s]=await(0,B.Yb)(n.experienceId,{...i,labels:n.labels});t&&alert("Updating experience failed")}else{const[n,i]=await(0,B.MJ)(e);n?alert("Cannot create new experience"):(e.experienceId=i.experienceId,this.experiences.push(e))}this.isLoading=!1,this.isModalOpen=!1},async deleteExperience(e,n){this.isLoading=!0;const[i,t]=await(0,B.Uk)(n.experienceId);i?alert("cannot delete"):this.experiences=this.experiences.filter((e=>{if(e!==n)return e})),this.isLoading=!1}},computed:{experienceAttributes(){let e=[];return this.experiences.forEach((n=>{n.labels.forEach((n=>{e.includes(n)||e.push(n)}))})),e}},data(){return{isModalOpen:!1,selectedExperience:null,labels:[],experiences:[],isLoading:!1}},props:{}}),Y=i(89);const q=(0,Y.Z)(W,[["render",U],["__scopeId","data-v-e78ed0e0"]]);var z=q,S=i(8003),j=(0,t.aZ)({name:"BuildProfileView",components:{TitleBlock:u.Z,AddExperiences:z,GoButton:S.Z},methods:{goToQuestions(){this.$router.push("/lecture/quiz")}}});const H=(0,Y.Z)(j,[["render",p],["__scopeId","data-v-48a9595f"]]);var N=H}}]);
//# sourceMappingURL=build-profile.7110d51c.js.map