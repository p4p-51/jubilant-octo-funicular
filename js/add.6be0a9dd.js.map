{"version":3,"file":"js/add.6be0a9dd.js","mappings":"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","sources":["webpack://frontend/./node_modules/vue-loader/dist/index.js","webpack://frontend/./src/views/pages/lectures/add-answers/AddAnswerView.vue"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-174d77b8\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"lecture-container\" }\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" Now you understand how to answer behaviural interview questions using the STAR method, itâ€™s time for you to start praticing. First pick out a question you want to answer, followed by a relevant experience. If you forgot to add an experience, you can still do that as well. \")\nconst _hoisted_3 = { class: \"content-container\" }\nconst _hoisted_4 = { class: \"questions-container\" }\nconst _hoisted_5 = { class: \"search-bar\" }\nconst _hoisted_6 = { class: \"list\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"answer-column\"\n}\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", { class: \"go-button\" }, \"Save and continue ->\", -1))\n\nimport AddQuestionResponse from \"@/components/AddQuestionResponse.vue\";\r\nimport QbSearchBar from \"@/components/QbSearchBar.vue\";\r\nimport QbSideBarQuestion from \"@/components/QbSideBarQuestion.vue\";\r\nimport TitleBlock from \"@/components/TitleBlock.vue\";\r\nimport { Answer, QuestionResponse } from \"@/types/Question.interface\";\r\nimport { onMounted, reactive, ref } from \"vue\";\r\nimport Loading from \"vue-loading-overlay\";\r\nimport \"vue-loading-overlay/dist/vue-loading.css\";\r\n\r\nimport { deleteAnswer, getQuestionAnswer, getQuestions } from \"@/apis/api\"; // import router\r\nimport { useRoute, useRouter } from \"vue-router\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'AddAnswerView',\n  setup(__props) {\n\r\nconst router = useRouter();\r\nconst route = useRoute();\r\n\r\nconst deleteResponse = async (answer: Answer) => {\r\n  isLoading.loading = true;\r\n  const [error, data] = await deleteAnswer(\r\n    answer.questionId!,\r\n    answer.experienceId,\r\n  );\r\n  selectedQuestion.value!.answers = selectedQuestion.value?.answers?.filter(\r\n    (ans) => {\r\n      return !(\r\n        ans.experienceId == answer.experienceId &&\r\n        ans.questionId == answer.questionId\r\n      );\r\n    },\r\n  );\r\n  selectedQuestion.value!.answerCount--;\r\n  isLoading.loading = false;\r\n};\r\nconst saveResponse = (answer: Answer, isEdit: boolean) => {\r\n  if (!isEdit) {\r\n    selectedQuestion.value!.answers!.push(answer);\r\n    selectedQuestion.value!.answerCount!++;\r\n  } else {\r\n    selectedQuestion.value?.answers?.forEach((ans) => {\r\n      if (ans.experienceId == answer.experienceId) {\r\n        ans.answer = answer.answer;\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nconst selectedQuestionId = ref<number>();\r\nconst addQuestionKey = ref<number>(0);\r\nconst onQuestionClick = async (id: number) => {\r\n  addQuestionKey.value++;\r\n  await setSelectedQuestion(id);\r\n};\r\n\r\nconst filter = ref<string>(\"\");\r\nconst filterQuestions = () => {\r\n  if (filter.value === \"\") {\r\n    return questions.questions;\r\n  } else {\r\n    return questions.questions.filter((q) => {\r\n      return (\r\n        q.labelId.toLowerCase().includes(filter.value) ||\r\n        q.questionText.toLowerCase().includes(filter.value)\r\n      );\r\n    });\r\n  }\r\n};\r\n\r\nconst isLoading = reactive({ loading: true });\r\nconst questions = reactive<{ questions: QuestionResponse[] }>({\r\n  questions: [],\r\n});\r\n\r\nconst selectedQuestion = ref<QuestionResponse>();\r\nconst setSelectedQuestion = async (questionId: number) => {\r\n  if (questionId === 0) {\r\n    isLoading.loading = false;\r\n    return;\r\n  }\r\n  isLoading.loading = true;\r\n  selectedQuestionId.value = questionId;\r\n  //TODO: Fix this issue if the question cannot be found\r\n  const question = questions.questions.find((q) => q.questionId == questionId);\r\n\r\n  if (question![\"answers\"] == undefined) {\r\n    const [error, data] = await getQuestionAnswer(questionId);\r\n    if (error) {\r\n      alert(\"cannot get saved answers to question\");\r\n      question![\"answers\"] = [];\r\n    }\r\n    question![\"answers\"] = data;\r\n  }\r\n\r\n  selectedQuestion.value = question;\r\n  isLoading.loading = false;\r\n};\r\n\r\nonMounted(async () => {\r\n  isLoading.loading = true;\r\n\r\n  const [error, data] = await getQuestions();\r\n  questions.questions = data;\r\n\r\n  let doesQuestionExist = false;\r\n  // selectedQuestionId.value = parseInt(route.params.id as unknown as string);\r\n  selectedQuestionId.value = 0;\r\n\r\n  questions.questions.forEach((q) => {\r\n    if (q.questionId == selectedQuestionId.value) {\r\n      doesQuestionExist = true;\r\n    }\r\n  });\r\n\r\n  console.log(\"question does exist\", doesQuestionExist);\r\n  if (!doesQuestionExist) {\r\n    selectedQuestionId.value = questions.questions[0].questionId;\r\n  }\r\n\r\n  await setSelectedQuestion(selectedQuestionId.value);\r\n\r\n  isLoading.loading = false;\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_unref(Loading), {\n      active: isLoading.loading,\n      \"onUpdate:active\": _cache[0] || (_cache[0] = ($event: any) => ((isLoading.loading) = $event))\n    }, null, 8, [\"active\"]),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(TitleBlock, {\n        module: \"Experience\",\n        title: \"Adding answers to your interview profile\",\n        subtitle: \"blah blac\"\n      }, {\n        default: _withCtx(() => [\n          _hoisted_2\n        ]),\n        _: 1\n      }),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _createVNode(QbSearchBar, {\n              onOnChange: _cache[1] || (_cache[1] = (s) => (filter.value = s.toLowerCase()))\n            })\n          ]),\n          _createElementVNode(\"div\", _hoisted_6, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filterQuestions(), (question) => {\n              return (_openBlock(), _createBlock(QbSideBarQuestion, {\n                key: question.questionId,\n                numResponses: question.answerCount,\n                title: question.questionText,\n                id: question.questionId,\n                isSelected: question.questionId === selectedQuestionId.value,\n                onOnQuestionClick: onQuestionClick\n              }, null, 8, [\"numResponses\", \"title\", \"id\", \"isSelected\"]))\n            }), 128))\n          ])\n        ]),\n        (!isLoading.loading)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n              (_openBlock(), _createBlock(AddQuestionResponse, {\n                initialQuestion: selectedQuestion.value,\n                key: addQuestionKey.value,\n                onSaveResponse: saveResponse,\n                onDeleteResponse: deleteResponse\n              }, null, 8, [\"initialQuestion\"]))\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _hoisted_8\n    ])\n  ], 64))\n}\n}\n\n})","import script from \"./AddAnswerView.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./AddAnswerView.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./AddAnswerView.vue?vue&type=style&index=0&id=174d77b8&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\Owner\\\\Documents\\\\playground\\\\p4p\\\\jubilant-octo-funicular\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-174d77b8\"]])\n\nexport default __exports__"],"names":["_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_createTextVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","key","_hoisted_8","_createElementVNode","_defineComponent","__name","setup","__props","useRouter","useRoute","deleteResponse","async","isLoading","loading","error","data","deleteAnswer","answer","questionId","experienceId","selectedQuestion","value","answers","filter","ans","answerCount","saveResponse","isEdit","forEach","push","selectedQuestionId","ref","addQuestionKey","onQuestionClick","setSelectedQuestion","id","filterQuestions","questions","q","labelId","toLowerCase","includes","questionText","reactive","question","find","undefined","getQuestionAnswer","alert","onMounted","getQuestions","doesQuestionExist","console","log","_ctx","_cache","_openBlock","_createElementBlock","_Fragment","_createVNode","_unref","Loading","active","$event","TitleBlock","module","title","subtitle","default","_withCtx","_","QbSearchBar","onOnChange","s","_renderList","_createBlock","QbSideBarQuestion","numResponses","isSelected","onOnQuestionClick","_createCommentVNode","AddQuestionResponse","initialQuestion","onSaveResponse","onDeleteResponse","__exports__"],"sourceRoot":""}